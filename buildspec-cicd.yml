version: 0.2

env:
  variables:
    AWS_REGION: ap-northeast-1
    AWS_ACCOUNT_ID: 0123123123
    ECS_CLUSTER_NAME_PREFIX: sample-backup-to-gcp
    SERVICE_ARN_PREFIX: sample-backup-to-gcp-service

phases:
  install:
    commands:
  pre_build: # ビルド前処理
    commands:
      - echo Clean file...
      - rm -rf .git .gitignore README.md
      - echo Logging in to Amazon ECR...
      - pip install awscli --upgrade
      - sudo apt -y update
      - sudo apt -y install jq
      - aws --version
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - IMAGE_NAME_GCLOUD_SDK=sample-backup-to-gcp-cloudsdk-${ENVIRONMENT}
      - REPOSITORY_URI_GCLOUD_SDK=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME_GCLOUD_SDK}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - REPOSITORY_URI_GCLOUD_SDK_AND_IMAGE_TAG=${REPOSITORY_URI_GCLOUD_SDK}:${IMAGE_TAG}
      # S3に置いてあるGCP側認証ファイルを取得
      - aws s3 cp s3://sample-backup-to-gcp-cicd-codepipeline-${ENVIRONMENT}/service-account-sync-s3-gcs-${ENVIRONMENT}.json ./environments/${ENVIRONMENT}/docker/GCLOUD_SDK/service_account.json
  build:
    commands:
      - echo ${ENVIRONMENT}
      - echo Build started on `date`
      - echo Building the Docker image...
      - pwd
      - ls -laht
      - docker build -t ${REPOSITORY_URI_GCLOUD_SDK}:latest --build-arg ENVIRONMENT=${ENVIRONMENT} -f ./environments/${ENVIRONMENT}/docker/GCLOUD_SDK/Dockerfile .
      - docker tag ${REPOSITORY_URI_GCLOUD_SDK}:latest ${REPOSITORY_URI_GCLOUD_SDK_AND_IMAGE_TAG}
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      # ECRにpush
      - docker push ${REPOSITORY_URI_GCLOUD_SDK}:$IMAGE_TAG
      - echo Writing image definitions file...
      - echo ${ENVIRONMENT}
      # イメージを更新
      - sed -e "s@<IMAGE_URI>@$REPOSITORY_URI_GCLOUD_SDK_AND_IMAGE_TAG@g" task_definition_develop.json > task_definition.json
      # タスク定義を更新
      - NEW_TASKDEF=`aws ecs register-task-definition --cli-input-json file://task_definition.json | jq -r '.taskDefinition.taskDefinitionArn'`
      - echo ${NEW_TASKDEF}
      # # サービスを更新
      # - aws ecs update-service --cluster ${ECS_CLUSTER_NAME_PREFIX}-${ENVIRONMENT} --service ${SERVICE_ARN_PREFIX}-${ENVIRONMENT} --task-definition ${NEW_TASKDEF}
artifacts:
  files:
    - task_definition.json
